@model IEnumerable<Blog.Models.BlogPost>
@using Microsoft.AspNetCore.Authorization
@using Blog.Services
@inject IAuthorizationService Authorization
@{
    var canEdit = (await Authorization.AuthorizeAsync(User, MyIdentityDataService.BlogPolicy_Edit)).Succeeded;
    var canDelete = (await Authorization.AuthorizeAsync(User, MyIdentityDataService.BlogPolicy_Delete)).Succeeded;
}

@{
    ViewData["Title"] = "Index";
}

<h1>Blog Posts</h1>

<p>
    <a asp-action="Create" id="createButton">Create New Post</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Body)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TimePosted)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td class="summary">
                    @Html.DisplayFor(modelItem => item.Body)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TimePosted)
                </td>
                <td>
                    @if (canEdit)
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit | </a>
                    }
                    @if (canDelete)
                    {
                        <a asp-action="Delete" asp-route-id="@item.Id"> Delete |</a>

                    }
                    <a asp-action="Details" asp-route-id="@item.Id" asp-route-slug="@item.Slug"> Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>
